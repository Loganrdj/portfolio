{"version":3,"sources":["components/Nav.js","components/Home.js","components/Contact/Contact.js","components/PreviewCard/PreviewCard.js","components/Projects/Projects.js","components/Resume/Resume.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync"],"names":["Nav","className","to","class","href","Home","delay","transitionDuration","Component","Contact","PreviewCard","props","button","deployed_url","target","rel","deployed_tag","src","image","alt","height","width","name","description","github_url","Projects","state","projects","this","map","project","animateIn","deployed_github","Resume","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id"],"mappings":"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","file":"static/js/main.526223b6.chunk.js","sourcesContent":["import React from 'react';\nimport \"../App.css\";\nimport { Link } from 'react-router-dom';\n\nfunction Nav() {\n  return (\n      <nav className=\"navAnimation navbar navbar-expand-lg navbar-dark bg-dark\">\n            <Link className=\"title flash\" to=\"/\">\n                <h1 class=\"\">Logan Moss</h1>\n            </Link>\n            <ul className=\"nav-links navbar-nav\">\n                \n                <Link to=\"/resume\" className=\"nav-link\">\n                    <li className=\"nav-item\">Resume</li>\n                </Link>\n                <Link to=\"/projects\" className=\"nav-link\">\n                    <li className=\"nav-item\">Projects</li>\n                </Link>\n                <Link to=\"/contact\" className=\"nav-link\">\n                    <li className=\"nav-item\">Contact</li>\n                </Link>\n                <a href=\"https://github.com/Loganrdj\" className=\"nav-link\">\n                    <li className=\"nav-item\">Github</li>\n                </a>\n            </ul>\n      </nav>\n  );\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport \"../App.css\";\nimport FadeIn from 'react-fade-in';\n\nclass Home extends Component{\n\n\n  render(){\n    return (\n        <div className=\"jumbotron\">\n          <FadeIn delay={700} transitionDuration={4000}>\n            <h1 class=\"display-4 textAnimate\">Hello.</h1>\n          {/* </FadeIn>\n          <FadeIn delay={2000} transitionDuration={4000}> */}\n            <h2 class=\"textAnimate\">My name is Logan Moss and I am a Fullstack Developer</h2>\n            <hr className=\"my-4\"></hr>\n            <div className=\"row\">\n              <div className=\"col-md-3 col-lg-3 col-sm-3 col-xl-3\">\n                <button className=\"buttonClass buttonAnimation\">Resume</button>\n              </div>\n              <div className=\"col-md-3 col-lg-3 col-sm-3 col-xl-3\">\n                <button className=\"buttonClass buttonAnimation\">Portfolio</button>\n              </div>\n              <div className=\"col-md-3 col-lg-3 col-sm-3 col-xl-3\">\n                <button className=\"buttonClass buttonAnimation\">Contact</button>\n              </div>\n              <div className=\"col-md-3 col-lg-3 col-sm-3 col-xl-3\">\n                <button className=\"buttonClass buttonAnimation\">Github</button>\n              </div>\n            </div>\n            \n          </FadeIn>\n        </div>\n    );\n  } \n}\n\nexport default Home;\n","import React from 'react';\nimport ContactCard from './ContactCard';\n\nfunction Contact() {\n  return (\n    <div className=\"wrapper\">\n      <h1>Contact Page</h1>\n    </div>\n    \n  )\n}\n\nexport default Contact;\n","import React from 'react';\nimport '../../App.css';\n\nfunction PreviewCard(props) {\n\n  let button;\n  if(props.deployed_url !== \"\"){\n    button = <a href={props.deployed_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"buttonClass buttonAnimation \">{props.deployed_tag}</a>\n  }\n\n  return (\n    <div className=\"card cardAnimate\">\n      <img className=\"card-img-top hoverable\" src={props.image} alt={props.alt} height=\"250px\" width=\"400px\"></img>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{props.name}</h5>\n        <p className=\"card-text\">{props.description}</p>\n      </div>\n      <div>\n        {button}\n        <a href={props.github_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"buttonClass buttonAnimation\">Github</a>\n      </div>\n    </div>\n  );\n}\n\nexport default PreviewCard;\n","import React, { Component } from 'react';\nimport \"../../App.css\"\nimport PreviewCard from \"../PreviewCard/PreviewCard\";\nimport projects from './projects.json';\nimport \"animate.css/animate.min.css\";\nimport ScrollAnimation from 'react-animate-on-scroll';\n\nclass Projects extends Component {\n\n  state = {\n    projects\n  }\n\n  render() {\n    return(\n    <div className=\"row\">\n      {this.state.projects.map(project => (\n        <div className=\"col-md-3 col-sm-3 col-lg-3 col-xl-3\">\n          <ScrollAnimation delay={300} animateIn=\"fadeIn\">\n            <PreviewCard \n              name = {project.name} \n              image = {project.image} \n              description = {project.description}\n              deployed_url = {project.deployed_url} \n              github_url = {project.github_url}\n              deployed_github = {project.deployed_github}\n              deployed_tag = {project.deployed_tag}\n              alt = {project.alt}\n            />\n          </ScrollAnimation>\n        </div>\n      ))}\n    </div>\n    \n    )}\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport \"../../App.css\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\n// const PDFImage = require(\"pdf-image\").PDFImage;\n// import PDFViewer from \"pdf-viewer-reactjs\"\n// pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst Resume = () => {\n\n  return (\n    <div></div>\n    // <PDFViewer\n    //     document={{\n    //         url: '',\n    //     }}\n    // />\n)\n  // var pdfImage = new PDFImage(\"/LoganResumeMarch2020.pdf\")\n  //   return(\n  //     <div>\n  //       <Document file={pdfImage}></Document>\n  //     </div>\n  //   )\n\n  \n  // state = {\n  //   numPages: null,\n  //   pageNumber: 1,\n  // }\n\n  // onDocumentLoadSuccess = ({ numPages }) => {\n  //   this.setState({ numPages });\n  // }\n\n  // render(){\n  //   const { pageNumber, numPages } = this.state;\n\n  //   return (\n  //     <div>\n  //       <Document \n  //         file=\"/Users/lrmoss/Desktop/react-portfolio/portfolio/public/LoganResumeMarch2020.pdf\"\n  //         onLoadSuccess={this.onDocumentLoadSuccess}>\n  //         <Page pageNumber={pageNumber} />\n  //       </Document>\n  //       <p>Page {pageNumber} of {numPages}</p>\n  //     </div>\n  //   );\n  // }\n  \n}\n\nexport default Resume;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from \"./components/Nav\"\nimport Home from \"./components/Home\"\nimport Contact from \"./components/Contact/Contact\"\nimport Projects from \"./components/Projects/Projects\"\nimport Resume from \"./components/Resume/Resume\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nclass App extends Component {\n  render(){\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Nav />\n          <Switch>\n            {/* <Route path=\"/portfolio\" component={Home}/> */}\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/resume\" component={Resume}/>\n            <Route path=\"/projects\" component={Projects}/>\n            <Route path=\"/contact\" component={Contact}/>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 32;"],"sourceRoot":""}